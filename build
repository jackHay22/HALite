#!/bin/bash

YELLOW='\033[1;33m'
CYAN='\033[1;96m'
NC='\033[0m'
MOUNTAIN='\xE2\x9B\xB0'

JAVA_RUNTIME=`/usr/libexec/java_home -v 1.8`
DATE=`date +%Y-%m-%d`

build_native () {
    printf "${MOUNTAIN}  Building ${CYAN}Interface${NC} app package...\n"
    javapackager -deploy \
      -native image \
      -nosign \
      -outdir out \
      -outfile interface \
      -srcfiles out/Interface.jar \
      -appclass system_main.RockAnalysis \
      -name "Interface" \
      -title "Geochemical Ablation Interface" \
      -Bruntime=${JAVA_RUNTIME} \
      -Bicon=resources/app/icon.icns
    printf "${MOUNTAIN}  ${CYAN}Interface${NC} built to ${YELLOW}/out/bundles/Interface${NC} \n"
}

if [ $# -eq 0 ]; then
  build_native
elif [ "$1" == "--release" ]; then
  if [ "$#" -eq 2 ]; then
    build_native
    mkdir -p release/${2}
    BUILD_NAME="Interface_${2}"
    OSX_NAME="OSX_${BUILD_NAME}.zip"
    CROSS_PLATFORM="CrossPlatform_${BUILD_NAME}.zip"
    pushd out/bundles
    zip -r $OSX_NAME ./Interface.app > /dev/null 2>&1
    popd
    pushd out
    zip -r $CROSS_PLATFORM ./Interface.jar > /dev/null 2>&1
    popd
    mv out/bundles/$OSX_NAME release/${2}/
    mv out/$CROSS_PLATFORM release/${2}/
    printf "${MOUNTAIN}  Build ${YELLOW}$BUILD_NAME${NC} release complete \n"
  else
    printf "${MOUNTAIN}  ${YELLOW}Error:${NC} specify a release version when using ${CYAN}--release${NC} \n"
  fi
fi
