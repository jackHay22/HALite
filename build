#!/bin/bash

YELLOW='\033[1;33m'
CYAN='\033[1;96m'
NC='\033[0m'
MOUNTAIN='\xE2\x9B\xB0'

JAVA_RUNTIME=`/usr/libexec/java_home -v 1.8`
DATE=`date +%Y-%m-%d`

APP_NAME="HALite"
JAR_NAME="HALite.jar"

build_native () {
    printf "${MOUNTAIN}  Building ${CYAN}${APP_NAME}${NC} app package...\n"
    javapackager -deploy \
      -native image \
      -nosign \
      -outdir out \
      -outfile halite \
      -srcfiles out/HALite.jar \
      -appclass system_main.HALite \
      -name $APP_NAME \
      -title "Geochemical Ablation Interface" \
      -Bruntime=${JAVA_RUNTIME} \
      -Bicon=resources/app/icon.icns
    printf "${MOUNTAIN}  ${CYAN}${APP_NAME}${NC} built to ${YELLOW}/out/bundles/${APP_NAME}${NC} \n"
}

if [ $# -eq 0 ]; then
  build_native
elif [ "$1" == "--icon" ]; then
  printf "${MOUNTAIN}  Building ${CYAN}${APP_NAME}${NC} iconset...\n"
  IMG=resources/app/icon.png
  TARGET=icon.iconset
  mkdir $TARGET
  sips -z 16 16   $IMG --out $TARGET/icon_16x16.png
  sips -z 32 32   $IMG --out $TARGET/icon_16x16@2x.png
  sips -z 32 32   $IMG --out $TARGET/icon_32x32.png
  sips -z 64 64   $IMG --out $TARGET/icon_32x32@2x.png
  sips -z 128 128 $IMG --out $TARGET/icon_128x128.png
  sips -z 256 256 $IMG --out $TARGET/icon_128x128@2x.png
  sips -z 256 256 $IMG --out $TARGET/icon_256x256.png
  sips -z 512 512 $IMG --out $TARGET/icon_256x256@2x.png
  sips -z 512 512 $IMG --out $TARGET/icon_512x512.png
  cp $IMG $TARGET/icon_512x512@2x.png
  iconutil -c icns $TARGET
  rm -R $TARGET
  mv icon.icns resources/app/
  #app build
  build_native
elif [ "$1" == "--release" ]; then
  if [ "$#" -eq 2 ]; then
    build_native
    #write metadata
    python metadata.py "out/bundles/HALite.app/Contents/Info.plist" ${2}
    RELEASE_VERSION_LABEL=${2}_$DATE
    mkdir -p release/${RELEASE_VERSION_LABEL}
    BUILD_NAME="${APP_NAME}_${RELEASE_VERSION_LABEL}"
    OSX_NAME="OSX_${BUILD_NAME}.zip"
    CROSS_PLATFORM="CrossPlatform_${BUILD_NAME}.zip"
    pushd out/bundles
    zip -r $OSX_NAME ./${APP_NAME}.app > /dev/null 2>&1
    popd
    pushd out
    zip -r $CROSS_PLATFORM ./$JAR_NAME > /dev/null 2>&1
    popd
    mv out/bundles/$OSX_NAME release/${RELEASE_VERSION_LABEL}/
    mv out/$CROSS_PLATFORM release/${RELEASE_VERSION_LABEL}/
    printf "${MOUNTAIN}  Build ${YELLOW}$BUILD_NAME${NC} release complete \n"
  else
    printf "${MOUNTAIN}  ${YELLOW}Error:${NC} specify a release version when using ${CYAN}--release${NC} \n"
  fi
else
  printf "${MOUNTAIN}  ${YELLOW}Error:${NC} ${CYAN}$1${NC} not a valid parameter (Did you mean ${CYAN}--release${NC}?)\n"
fi
